// Generated by view binder compiler. Do not edit!
package com.example.battlerunner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.battlerunner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPersonalEndBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton closeBtn;

  @NonNull
  public final FragmentContainerView mapFragmentContainer;

  @NonNull
  public final TextView todayDistance;

  @NonNull
  public final TextView todayTime;

  private ActivityPersonalEndBinding(@NonNull LinearLayout rootView, @NonNull ImageButton closeBtn,
      @NonNull FragmentContainerView mapFragmentContainer, @NonNull TextView todayDistance,
      @NonNull TextView todayTime) {
    this.rootView = rootView;
    this.closeBtn = closeBtn;
    this.mapFragmentContainer = mapFragmentContainer;
    this.todayDistance = todayDistance;
    this.todayTime = todayTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPersonalEndBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPersonalEndBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_personal_end, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPersonalEndBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeBtn;
      ImageButton closeBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeBtn == null) {
        break missingId;
      }

      id = R.id.mapFragmentContainer;
      FragmentContainerView mapFragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (mapFragmentContainer == null) {
        break missingId;
      }

      id = R.id.today_distance;
      TextView todayDistance = ViewBindings.findChildViewById(rootView, id);
      if (todayDistance == null) {
        break missingId;
      }

      id = R.id.today_time;
      TextView todayTime = ViewBindings.findChildViewById(rootView, id);
      if (todayTime == null) {
        break missingId;
      }

      return new ActivityPersonalEndBinding((LinearLayout) rootView, closeBtn, mapFragmentContainer,
          todayDistance, todayTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
