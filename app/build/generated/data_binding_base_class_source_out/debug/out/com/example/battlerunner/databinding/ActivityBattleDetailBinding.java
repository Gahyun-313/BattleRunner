// Generated by view binder compiler. Do not edit!
package com.example.battlerunner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.battlerunner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBattleDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final TextView battleDate;

  @NonNull
  public final ImageView battleImage;

  @NonNull
  public final ImageButton closeBtn;

  @NonNull
  public final TextView opponentName;

  @NonNull
  public final TextView popupDistance;

  @NonNull
  public final TextView popupElapsedTime;

  private ActivityBattleDetailBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull TextView battleDate, @NonNull ImageView battleImage, @NonNull ImageButton closeBtn,
      @NonNull TextView opponentName, @NonNull TextView popupDistance,
      @NonNull TextView popupElapsedTime) {
    this.rootView = rootView;
    this.battleDate = battleDate;
    this.battleImage = battleImage;
    this.closeBtn = closeBtn;
    this.opponentName = opponentName;
    this.popupDistance = popupDistance;
    this.popupElapsedTime = popupElapsedTime;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBattleDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBattleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_battle_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBattleDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.battleDate;
      TextView battleDate = ViewBindings.findChildViewById(rootView, id);
      if (battleDate == null) {
        break missingId;
      }

      id = R.id.battleImage;
      ImageView battleImage = ViewBindings.findChildViewById(rootView, id);
      if (battleImage == null) {
        break missingId;
      }

      id = R.id.closeBtn;
      ImageButton closeBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeBtn == null) {
        break missingId;
      }

      id = R.id.opponentName;
      TextView opponentName = ViewBindings.findChildViewById(rootView, id);
      if (opponentName == null) {
        break missingId;
      }

      id = R.id.popupDistance;
      TextView popupDistance = ViewBindings.findChildViewById(rootView, id);
      if (popupDistance == null) {
        break missingId;
      }

      id = R.id.popupElapsedTime;
      TextView popupElapsedTime = ViewBindings.findChildViewById(rootView, id);
      if (popupElapsedTime == null) {
        break missingId;
      }

      return new ActivityBattleDetailBinding((LinearLayoutCompat) rootView, battleDate, battleImage,
          closeBtn, opponentName, popupDistance, popupElapsedTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
